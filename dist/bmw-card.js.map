{"mappings":"ACAO,MAAM,kDAAgB;IACzB,sEAAsE;IACtE,uBAAuB;IACvB,IAAI,KAAK,IAAI,EAAE;QACX,gDAAgD;QAChD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,IAAI,CAAC,SAAS,GAAG,CAAC;;;;MAIxB,CAAC;YACK,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;QACtC;QAEA,MAAM,WAAW,IAAI,CAAC,MAAM,CAAC,MAAM;QACnC,MAAM,QAAQ,KAAK,MAAM,CAAC,SAAS;QACnC,MAAM,WAAW,QAAQ,MAAM,KAAK,GAAG;QAEvC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC;mBACf,EAAE,SAAS,IAAI,EAAE,SAAS;;;IAGzC,CAAC;IACD;IAEA,UAAU,MAAM,EAAE;QACd,IAAI,CAAC,OAAO,MAAM,EACd,MAAM,IAAI,MAAM;QAEpB,IAAI,CAAC,MAAM,GAAG;IAClB;IAEA,OAAO,mBAAmB;QACtB,OAAO,SAAS,aAAa,CAAC;IAClC;IAEA,cAAc;QACV,OAAO;IACX;IAEA,mBAAmB;QACf,OAAO;YACH,WAAW;YACX,cAAc;YACd,eAAe;YACf,eAAe;QACnB;IACJ;AAEJ;;;ACjDO,MAAM,kDAAsB;IAC/B,UAAU,MAAM,EAAE;QACd,IAAI,CAAC,OAAO,GAAG;IACnB;IAEA,cAAc,SAAS,EAAE;QACrB,MAAM,QAAQ,IAAI,MAAM,kBAAkB;YACtC,SAAS;YACT,UAAU;QACd;QACA,MAAM,MAAM,GAAG;YAAE,QAAQ;QAAU;QACnC,IAAI,CAAC,aAAa,CAAC;IACvB;AACJ;;;AFVA,eAAe,MAAM,CAAC,YAAY,CAAA,GAAA,yCAAM;AACxC,eAAe,MAAM,CAAC,mBAAmB,CAAA,GAAA,yCAAY;AAErD,OAAO,WAAW,GAAG,OAAO,WAAW,IAAI,EAAE;AAC7C,OAAO,WAAW,CAAC,IAAI,CAAC;IACpB,MAAM;IACN,MAAM;IACN,aAAa;IACb,kBAAkB;AACtB","sources":["src/index.js","src/bmw-card.js","src/bmw-card-editor.js"],"sourcesContent":["import { BmwCard } from \"./bmw-card\";\nimport { BmwCardEditor } from \"./bmw-card-editor\";\n\ncustomElements.define(\"bmw-card\", BmwCard);\ncustomElements.define(\"bmw-card-editor\", BmwCardEditor);\n\nwindow.customCards = window.customCards || [];\nwindow.customCards.push({\n    type: \"bmw-card\",\n    name: \"BMW Card\",\n    description: \"BMW Card to show car data from Connected Drive integration.\",\n    documentationURL: \"https://github.com/Jarflux/homeassistant-bmw-card/blob/master/README.md\",\n});","export class BmwCard extends HTMLElement {\n    // Whenever the state changes, a new `hass` object is set. Use this to\n    // update your content.\n    set hass(hass) {\n        // Initialize the content if it's not there yet.\n        if (!this.content) {\n            this.innerHTML = `\n        <ha-card header=\"Example-card\">\n          <div class=\"card-content\"></div>\n        </ha-card>\n      `;\n            this.content = this.querySelector(\"div\");\n        }\n\n        const entityId = this.config.entity;\n        const state = hass.states[entityId];\n        const stateStr = state ? state.state : \"unavailable\";\n\n        this.content.innerHTML = `\n      The state of ${entityId} is ${stateStr}!\n      <br><br>\n      <img src=\"http://via.placeholder.com/350x150\">\n    `;\n    }\n\n    setConfig(config) {\n        if (!config.entity) {\n            throw new Error(\"You need to define an entity\");\n        }\n        this.config = config;\n    }\n\n    static getConfigElement() {\n        return document.createElement(\"bmw-card-editor\");\n    }\n\n    getCardSize() {\n        return 3;\n    }\n\n    getLayoutOptions() {\n        return {\n            grid_rows: 3,\n            grid_columns: 2,\n            grid_min_rows: 3,\n            grid_max_rows: 3,\n        };\n    }\n\n}","export class BmwCardEditor extends LitElement {\n    setConfig(config) {\n        this._config = config;\n    }\n\n    configChanged(newConfig) {\n        const event = new Event(\"config-changed\", {\n            bubbles: true,\n            composed: true,\n        });\n        event.detail = { config: newConfig };\n        this.dispatchEvent(event);\n    }\n}"],"names":[],"version":3,"file":"bmw-card.js.map"}